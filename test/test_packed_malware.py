import glob
import os
from shutil import copyfile


class PackedFile:
    def __init__(self):
        self.type_of_packer = None
        self.file_name = None


def load_packed_file_info(file_path):
    with open(file_path, 'r') as file_descriptor:
        lines = file_descriptor.readlines()

    packed_files = list()

    for line in lines:
        type_of_packer = line.split(' ')[0]
        file_path = line.split(' ')[1]

        file_name = os.path.basename(file_path)
        file_name = os.path.splitext(file_name)[0]

        packed_file = PackedFile()
        packed_file.type_of_packer = type_of_packer
        packed_file.file_name = file_name.strip()

        is_contains = False

        for file in packed_files:
            if file.file_name == packed_file.file_name:
                is_contains = True

                break

        if not is_contains:
            packed_files.append(packed_file)

    return packed_files


if __name__ == '__main__':
    dest_image_dir_path = r'C:\Users\BAEK\Desktop\packer\adjusted_packed_image'

    packed_image_paths = glob.glob(r'C:\Users\BAEK\Desktop\packer\packed_image/*')
    packed_files = load_packed_file_info(r'C:\Users\BAEK\Desktop\packer\type_of_packer.txt')

    for packed_file in packed_files:
        for packed_image_path in packed_image_paths:
            file_name = os.path.basename(packed_image_path)
            file_name = os.path.splitext(file_name)[0]

            if packed_file.file_name == file_name:
                copyfile(packed_image_path, r'{0}\{1}_{2}.bmp'.format(dest_image_dir_path,
                                                                      packed_file.type_of_packer,
                                                                      packed_file.file_name))

                break

