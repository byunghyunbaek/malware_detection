import os
import csv
import glob
from shutil import copyfile


def get_family_name(label):
    if label == '1':
        return 'Ramnit'

    elif label == '2':
        return 'Lollipop'

    elif label == '3':
        return 'Kelihos_ver3'

    elif label == '4':
        return 'Vundo'

    elif label == '5':
        return 'Simda'

    elif label == '6':
        return 'Tracur'

    elif label == '7':
        return 'Kelihos_ver1'

    elif label == '8':
        return 'Obfuscator.ACY'

    elif label == '9':
        return 'Gatak'

    else:
        raise Exception('Invalid malware family class. [{0}]'.format(label))


def get_label_dictionary(label_csv_path):
    label_dicts = dict()

    with open(label_csv_path, 'r') as file_descriptor:
        reader = csv.reader(file_descriptor, delimiter=',')

        for line in reader:
            file_name = line[0]
            label = line[1]

            label_dicts[file_name] = get_family_name(label)
            # label_dicts[file_name] = label

    return label_dicts


def get_file_name(file_path):
    file_name = os.path.basename(file_path)
    file_name = os.path.splitext(file_name)[0]

    return file_name


LABEL_CSV_PATH = r'C:\Users\BAEK\Desktop\research\Malware\dataset\trainLabels.csv'
ROOT_SRC_DIR_PATH = r'C:\Users\BAEK\Desktop\research\Malware\image\ms_data\entropy_histgoram_l6\train'
ROOT_DSC_DIR_PATH = r'C:\Users\BAEK\Desktop\research\Malware\performance\ms_data\image\entropy_histogram_l6'
EXTENSION = '.PNG'


if __name__ == '__main__':
    if not os.path.exists(ROOT_DSC_DIR_PATH):
        os.mkdir(ROOT_DSC_DIR_PATH)

    families = ['Ramnit', 'Lollipop', 'Kelihos_ver3', 'Vundo', 'Simda', 'Tracur', 'Kelihos_ver1', 'Obfuscator.ACY', 'Gatak']
    for family in families:
        family_dir_path = os.path.join(ROOT_DSC_DIR_PATH, family)
        if not os.path.exists(family_dir_path):
            os.mkdir(family_dir_path)

    label_dicts = get_label_dictionary(LABEL_CSV_PATH)

    file_paths = glob.glob(os.path.join(ROOT_SRC_DIR_PATH, '*'))
    for file_path in file_paths:
        file_name = get_file_name(file_path)

        label = label_dicts[file_name]
        family_dir_path = os.path.join(ROOT_DSC_DIR_PATH, label)

        dsc_file_path = os.path.join(family_dir_path, file_name + EXTENSION)

        copyfile(file_path, dsc_file_path)


