import os
import numpy as np
import cv2
import uuid

from sklearn.preprocessing import MinMaxScaler

from dataset.data_reader import DataReader


def get_family_name(label):
    label = label + 1
    if label == 1:
        return 'Ramnit'
    elif label == 2:
        return 'Lollipop'
    elif label == 3:
        return 'Kelihos_ver3'
    elif label == 4:
        return 'Vundo'
    elif label == 5:
        return 'Simda'
    elif label == 6:
        return 'Tracur'
    elif label == 7:
        return 'Kelihos_ver1'
    elif label == 8:
        return 'Obfuscator_ACY'
    elif label == 9:
        return 'Gatak'


ROOT_IMAGE_DIR_PATH = r'C:\Users\BAEK\Desktop\image'
FEATURE_PATH = r'C:\Users\BAEK\Desktop\research\Malware\dataset\feature\EH_L6_family_A_D_H_P_RM_RP_T_W.spa'
FEATURE_LENGTH = 1536
BIN_LENGTH = 256


if __name__ == '__main__':
    dataset = DataReader(file_name=FEATURE_PATH).get_dataset()
    dataset.scale()

    images = dataset.X.reshape(dataset.X.shape[0], int(dataset.X.shape[1] / BIN_LENGTH), BIN_LENGTH).astype('float32')

    for label, image in zip(dataset.y, images):
        scaler = MinMaxScaler(feature_range=(0, 255))

        image = scaler.fit_transform(image)
        image = image.astype(np.uint8)

        FAMILY_IMAGE_DIR_PATH = os.path.join(ROOT_IMAGE_DIR_PATH, get_family_name(label))
        if os.path.exists(FAMILY_IMAGE_DIR_PATH) is False:
            os.mkdir(FAMILY_IMAGE_DIR_PATH)

        cv2.imwrite(os.path.join(FAMILY_IMAGE_DIR_PATH, str(uuid.uuid4()) + '.PNG'), image)
